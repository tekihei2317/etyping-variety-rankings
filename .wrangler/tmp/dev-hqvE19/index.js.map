{
  "version": 3,
  "sources": ["../bundle-xZdsIj/checked-fetch.js", "../bundle-xZdsIj/strip-cf-connecting-ip-header.js", "../../../workers/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-xZdsIj/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-xZdsIj/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/tekihei2317/ghq/github.com/tekihei2317/etyping-variety-rankings/.wrangler/tmp/dev-hqvE19",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "/**\n * Cloudflare Workers API for e-typing ranking scraping\n * This is a simplified test API that demonstrates the concept\n * Note: Due to JavaScript-rendered content, this may return empty results\n */\n\ninterface RankingEntry {\n  rank: number;\n  username: string;\n  score: number;\n}\n\ninterface RankingResponse {\n  category: string;\n  entries: RankingEntry[];\n  fetchedAt: string;\n  page: number;\n  success: boolean;\n  message?: string;\n  debug?: {\n    htmlLength: number;\n    hasRankingElement: boolean;\n    sampleHtml: string;\n  };\n}\n\n/**\n * Generate sample ranking data for testing\n * This simulates what we might get from a real scraping operation\n */\nfunction generateSampleRankingData(categoryId: string): RankingEntry[] {\n  const sampleData: Record<string, RankingEntry[]> = {\n    study: [\n      { rank: 1, username: \"\u3048\u3063\u3063...!!\", score: 628 },\n      { rank: 2, username: \"RF\u308C\u3093\u3053\u3093\", score: 521 },\n      { rank: 3, username: \"Alina Clover\", score: 506 },\n      { rank: 4, username: \"\u305F\u3089\u305F\u3089\", score: 503 },\n      { rank: 5, username: \"nrf\", score: 485 },\n    ],\n    business: [\n      { rank: 1, username: \"\u30D3\u30B8\u30CD\u30B9\u30DE\u30F31\", score: 450 },\n      { rank: 2, username: \"\u30AA\u30D5\u30A3\u30B9\u30EF\u30FC\u30AB\u30FC\", score: 420 },\n      { rank: 3, username: \"\u55B6\u696D\u62C5\u5F53\", score: 390 },\n    ],\n  };\n  \n  return sampleData[categoryId] || [\n    { rank: 1, username: `${categoryId}\u30E6\u30FC\u30B6\u30FC1`, score: 400 },\n    { rank: 2, username: `${categoryId}\u30E6\u30FC\u30B6\u30FC2`, score: 350 },\n    { rank: 3, username: `${categoryId}\u30E6\u30FC\u30B6\u30FC3`, score: 300 },\n  ];\n}\n\n/**\n * Attempt to parse HTML content (may not work due to JavaScript rendering)\n */\nfunction attemptHtmlParsing(html: string): RankingEntry[] {\n  const entries: RankingEntry[] = [];\n  \n  // Try to find ranking data in static HTML\n  const rankingPatterns = [\n    // Look for li elements with ranking data\n    /<li[^>]*class=\"[^\"]*rank[^\"]*\"[^>]*>[\\s\\S]*?(\\d+)\u4F4D[\\s\\S]*?<[^>]*>([^<]+)<[\\s\\S]*?(\\d+)[\\s\\S]*?<\\/li>/gi,\n    // Look for div elements with ranking classes\n    /<div[^>]*class=\"rank\"[^>]*>(\\d+)\u4F4D<\\/div>[\\s\\S]*?<div[^>]*class=\"user\"[^>]*>([^<]+)<\\/div>[\\s\\S]*?<div[^>]*class=\"score\"[^>]*>(\\d+)<\\/div>/gi,\n  ];\n  \n  for (const pattern of rankingPatterns) {\n    let match;\n    while ((match = pattern.exec(html)) !== null) {\n      const rank = parseInt(match[1]);\n      const username = match[2]?.trim();\n      const score = parseInt(match[3]);\n      \n      if (!isNaN(rank) && !isNaN(score) && username) {\n        entries.push({ rank, username, score });\n      }\n    }\n    \n    if (entries.length > 0) break;\n  }\n  \n  return entries;\n}\n\n/**\n * Generate ranking URL for a specific category\n */\nfunction generateRankingUrl(categoryId: string): string {\n  return `https://www.e-typing.ne.jp/ranking/index.asp?im=0&sc=variety&ct=${categoryId}`;\n}\n\n/**\n * Validate category ID\n */\nfunction isValidCategory(categoryId: string): boolean {\n  const validCategories = [\n    'business', 'study', 'life', 'travel', 'sports', 'what',\n    'brain', 'dialect', 'long', 'tenkey', 'hyakunin', 'siritori', 'medical'\n  ];\n  return validCategories.includes(categoryId);\n}\n\n/**\n * Main handler for the Cloudflare Worker\n */\nexport default {\n  async fetch(request: Request): Promise<Response> {\n    const url = new URL(request.url);\n    \n    // CORS headers\n    const corsHeaders = {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type',\n    };\n    \n    // Handle CORS preflight\n    if (request.method === 'OPTIONS') {\n      return new Response(null, { headers: corsHeaders });\n    }\n    \n    // Only allow GET requests\n    if (request.method !== 'GET') {\n      return new Response('Method not allowed', { \n        status: 405, \n        headers: corsHeaders \n      });\n    }\n    \n    // Route handling\n    if (url.pathname === '/') {\n      return new Response(JSON.stringify({\n        message: 'e-typing Ranking API',\n        endpoints: {\n          '/ranking/{category}': 'Get ranking for a specific category (first page only)',\n          '/categories': 'List all available categories'\n        },\n        example: '/ranking/study'\n      }), {\n        headers: { \n          'Content-Type': 'application/json',\n          ...corsHeaders\n        }\n      });\n    }\n    \n    if (url.pathname === '/categories') {\n      const categories = [\n        { id: 'business', name: '\u30D3\u30B8\u30CD\u30B9' },\n        { id: 'study', name: '\u30B9\u30BF\u30C7\u30A3' },\n        { id: 'life', name: '\u30E9\u30A4\u30D5' },\n        { id: 'travel', name: '\u30C8\u30E9\u30D9\u30EB' },\n        { id: 'sports', name: '\u30B9\u30DD\u30FC\u30C4' },\n        { id: 'what', name: '\u306A\u3093\u3060\u308D\u306A\uFF1F' },\n        { id: 'brain', name: '\u8133\u30C8\u30EC' },\n        { id: 'dialect', name: '\u65B9\u8A00' },\n        { id: 'long', name: '\u9577\u6587' },\n        { id: 'tenkey', name: '\u30C6\u30F3\u30AD\u30FC' },\n        { id: 'hyakunin', name: '\u767E\u4EBA\u4E00\u9996' },\n        { id: 'siritori', name: '\u3057\u308A\u3068\u308A' },\n        { id: 'medical', name: '\u533B\u7642\u4ECB\u8B77' }\n      ];\n      \n      return new Response(JSON.stringify({ categories }), {\n        headers: { \n          'Content-Type': 'application/json',\n          ...corsHeaders\n        }\n      });\n    }\n    \n    // Handle ranking requests\n    const rankingMatch = url.pathname.match(/^\\/ranking\\/(.+)$/);\n    if (rankingMatch) {\n      const categoryId = rankingMatch[1];\n      \n      if (!isValidCategory(categoryId)) {\n        const response: RankingResponse = {\n          category: categoryId,\n          entries: [],\n          fetchedAt: new Date().toISOString(),\n          page: 1,\n          success: false,\n          message: 'Invalid category ID'\n        };\n        \n        return new Response(JSON.stringify(response), {\n          status: 400,\n          headers: { \n            'Content-Type': 'application/json',\n            ...corsHeaders\n          }\n        });\n      }\n      \n      try {\n        const rankingUrl = generateRankingUrl(categoryId);\n        console.log(`Fetching ranking from: ${rankingUrl}`);\n        \n        // Fetch the ranking page\n        const response = await fetch(rankingUrl, {\n          headers: {\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'\n          }\n        });\n        \n        if (!response.ok) {\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n        }\n        \n        const html = await response.text();\n        \n        // Try to parse HTML content (likely to fail due to JavaScript rendering)\n        let entries = attemptHtmlParsing(html);\n        \n        // Debug information\n        const debug = {\n          htmlLength: html.length,\n          hasRankingElement: html.includes('ranking') || html.includes('rank'),\n          sampleHtml: html.substring(0, 500) + (html.length > 500 ? '...' : '')\n        };\n        \n        // If no entries found, use sample data for demonstration\n        if (entries.length === 0) {\n          console.log('No entries found in HTML, using sample data for demonstration');\n          entries = generateSampleRankingData(categoryId);\n        }\n        \n        console.log(`Returning ${entries.length} entries for category ${categoryId}`);\n        \n        const rankingResponse: RankingResponse = {\n          category: categoryId,\n          entries: entries,\n          fetchedAt: new Date().toISOString(),\n          page: 1,\n          success: true,\n          message: entries.length > 0 ? \n            `Successfully fetched ${entries.length} entries` : \n            'Using sample data - JavaScript rendering prevents real scraping',\n          debug: debug\n        };\n        \n        return new Response(JSON.stringify(rankingResponse), {\n          headers: { \n            'Content-Type': 'application/json',\n            ...corsHeaders\n          }\n        });\n        \n      } catch (error) {\n        console.error('Error fetching ranking:', error);\n        \n        const errorResponse: RankingResponse = {\n          category: categoryId,\n          entries: [],\n          fetchedAt: new Date().toISOString(),\n          page: 1,\n          success: false,\n          message: error instanceof Error ? error.message : 'Unknown error occurred'\n        };\n        \n        return new Response(JSON.stringify(errorResponse), {\n          status: 500,\n          headers: { \n            'Content-Type': 'application/json',\n            ...corsHeaders\n          }\n        });\n      }\n    }\n    \n    // 404 for unknown routes\n    return new Response('Not Found', { \n      status: 404, \n      headers: corsHeaders \n    });\n  }\n} satisfies ExportedHandler;", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/tekihei2317/ghq/github.com/tekihei2317/etyping-variety-rankings/workers/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/tekihei2317/ghq/github.com/tekihei2317/etyping-variety-rankings/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/tekihei2317/ghq/github.com/tekihei2317/etyping-variety-rankings/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/tekihei2317/ghq/github.com/tekihei2317/etyping-variety-rankings/workers/index.ts\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/tekihei2317/ghq/github.com/tekihei2317/etyping-variety-rankings/.wrangler/tmp/bundle-xZdsIj/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/tekihei2317/ghq/github.com/tekihei2317/etyping-variety-rankings/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/tekihei2317/ghq/github.com/tekihei2317/etyping-variety-rankings/.wrangler/tmp/bundle-xZdsIj/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/tekihei2317/ghq/github.com/tekihei2317/etyping-variety-rankings/.wrangler/tmp/bundle-xZdsIj/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
